{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caiof\\\\Documents\\\\seletivacnweb\\\\client\\\\src\\\\components\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { nome, whats } from './masks';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  mask,\n  ...props\n}) => {\n  _s();\n\n  const handleKeyUp = useCallback(e => {\n    if (mask === 'nome') {\n      nome(e);\n    }\n\n    if (mask === 'whats') {\n      whats(e);\n    }\n  }, [mask]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", { ...props,\n      onKeyUp: handleKeyUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"fIofXiDv/ndWw9/queBQVubKtwA=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/caiof/Documents/seletivacnweb/client/src/components/Form.tsx"],"names":["React","useCallback","nome","whats","Form","mask","props","handleKeyUp","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,SAA5B;AACA,OAAO,YAAP;;;AAMA,MAAMC,IAA0B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQ,KAAGC;AAAX,CAAD,KAAwB;AAAA;;AACvD,QAAMC,WAAW,GAAGN,WAAW,CAAEO,CAAD,IAA0C;AACtE,QAAIH,IAAI,KAAK,MAAb,EAAqB;AACjBH,MAAAA,IAAI,CAACM,CAAD,CAAJ;AACH;;AACD,QAAIH,IAAI,KAAK,OAAb,EAAsB;AAClBF,MAAAA,KAAK,CAACK,CAAD,CAAL;AACH;AACJ,GAP8B,EAO5B,CAACH,IAAD,CAP4B,CAA/B;AAQA,sBACI;AAAA,2BACI,sBAAWC,KAAX;AAAkB,MAAA,OAAO,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAdD;;GAAMH,I;;KAAAA,I;AAgBN,eAAeA,IAAf","sourcesContent":["import React, { InputHTMLAttributes, useCallback } from 'react';\r\nimport { nome, whats } from './masks'\r\nimport './Form.css'\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    mask: \"nome\" | \"whats\";\r\n}\r\n\r\nconst Form: React.FC<InputProps> = ({ mask, ...props }) => {\r\n    const handleKeyUp = useCallback((e: React.FormEvent<HTMLInputElement>) => {\r\n        if (mask === 'nome') {\r\n            nome(e);\r\n        }\r\n        if (mask === 'whats') {\r\n            whats(e);\r\n        }\r\n    }, [mask]);\r\n    return (\r\n        <div>\r\n            <input {...props} onKeyUp={handleKeyUp} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}