{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\caiof\\\\Documents\\\\seletivacnweb\\\\Client\\\\src\\\\components\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { email, nome, whats } from './masks';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = _ref => {\n  _s();\n\n  let {\n    mask,\n    prefix,\n    ...props\n  } = _ref;\n  const handleKeyUp = useCallback(e => {\n    if (mask === 'nome') {\n      nome(e);\n    }\n\n    if (mask === 'whats') {\n      whats(e);\n    }\n\n    if (mask === 'email') {\n      email(e);\n    }\n  }, [mask]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form prefix\",\n    children: [prefix && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"prefix-span\",\n      children: prefix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...props,\n      onKeyUp: handleKeyUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"fIofXiDv/ndWw9/queBQVubKtwA=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/caiof/Documents/seletivacnweb/Client/src/components/Form.tsx"],"names":["React","useCallback","email","nome","whats","Form","mask","prefix","props","handleKeyUp","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAmC,SAAnC;AACA,OAAO,YAAP;;;AAOA,MAAMC,IAA0B,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgB,OAAGC;AAAnB,GAA+B;AAC/D,QAAMC,WAAW,GAAGR,WAAW,CAAES,CAAD,IAA0C;AACtE,QAAIJ,IAAI,KAAK,MAAb,EAAqB;AACjBH,MAAAA,IAAI,CAACO,CAAD,CAAJ;AACH;;AACD,QAAIJ,IAAI,KAAK,OAAb,EAAsB;AAClBF,MAAAA,KAAK,CAACM,CAAD,CAAL;AACH;;AACD,QAAIJ,IAAI,KAAK,OAAb,EAAsB;AAClBJ,MAAAA,KAAK,CAACQ,CAAD,CAAL;AACH;AACJ,GAV8B,EAU5B,CAACJ,IAAD,CAV4B,CAA/B;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACKC,MAAM,iBAAI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,gBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,YADf,eAEI,sBAAWC,KAAX;AAAkB,MAAA,OAAO,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBD;;GAAMJ,I;;KAAAA,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React, { InputHTMLAttributes, useCallback } from 'react';\r\nimport { email, nome, whats } from './masks'\r\nimport './Form.css'\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    mask: \"nome\" | \"whats\" | \"email\";\r\n    prefix?: string;\r\n}\r\n\r\nconst Form: React.FC<InputProps> = ({ mask, prefix, ...props }) => {\r\n    const handleKeyUp = useCallback((e: React.FormEvent<HTMLInputElement>) => {\r\n        if (mask === 'nome') {\r\n            nome(e);\r\n        }\r\n        if (mask === 'whats') {\r\n            whats(e);\r\n        }\r\n        if (mask === 'email') {\r\n            email(e);\r\n        }\r\n    }, [mask]);\r\n    return (\r\n        <div className=\"form prefix\">\r\n            {prefix && <span className=\"prefix-span\">{prefix}</span>}\r\n            <input {...props} onKeyUp={handleKeyUp} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}